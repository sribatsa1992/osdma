package com.sunjray.osdma.PCmodel;
// Generated Jul 29, 2019 8:46:52 PM by Hibernate Tools 4.3.5.Final

import static javax.persistence.GenerationType.IDENTITY;

import java.util.Date;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;

/**
 * TOsWorkStatus generated by hbm2java
 */
@Entity
@Table(name = "t_os_work_status", catalog = "osdma")
public class WorkStatus implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = 1L;

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "work_status_id", unique = true, nullable = false)
	private Long workStatusId;

	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "team_task_map_id")
	private PmTeamTaskMap pmTeamTaskMap;

	@Column(name = "work_status", length = 10)
	private String workStatus;

	@Column(name = "remark", length = 45)
	private String remark;

	@Column(name = "status_date", length = 19)
	private Date statusDate;

	@Column(name = "work_image", length = 45)
	private String workImage;

	@Column(name = "verified_by")
	private Integer verifiedBy;

	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "uploaded_by", referencedColumnName = "user_id")
	private User uploadByUser;

	@Column(name = "created_on", length = 19)
	private Date createdOn;

	@Column(name = "created_by")
	private Integer createdBy;

	@Column(name = "modify_by")
	private Integer modifyBy;

	@Column(name = "modify_on", length = 19)
	private Date modifyOn;

	public Long getWorkStatusId() {
		return workStatusId;
	}

	public void setWorkStatusId(Long workStatusId) {
		this.workStatusId = workStatusId;
	}

	public PmTeamTaskMap getPmTeamTaskMap() {
		return pmTeamTaskMap;
	}

	public void setPmTeamTaskMap(PmTeamTaskMap pmTeamTaskMap) {
		this.pmTeamTaskMap = pmTeamTaskMap;
	}

	public String getWorkStatus() {
		return workStatus;
	}

	public void setWorkStatus(String workStatus) {
		this.workStatus = workStatus;
	}

	public String getRemark() {
		return remark;
	}

	public void setRemark(String remark) {
		this.remark = remark;
	}

	public Date getStatusDate() {
		return statusDate;
	}

	public void setStatusDate(Date statusDate) {
		this.statusDate = statusDate;
	}

	public String getWorkImage() {
		return workImage;
	}

	public void setWorkImage(String workImage) {
		this.workImage = workImage;
	}

	public Integer getVerifiedBy() {
		return verifiedBy;
	}

	public void setVerifiedBy(Integer verifiedBy) {
		this.verifiedBy = verifiedBy;
	}


	public User getUploadByUser() {
		return uploadByUser;
	}

	public void setUploadByUser(User uploadByUser) {
		this.uploadByUser = uploadByUser;
	}

	public Date getCreatedOn() {
		return createdOn;
	}

	public void setCreatedOn(Date createdOn) {
		this.createdOn = createdOn;
	}

	public Integer getCreatedBy() {
		return createdBy;
	}

	public void setCreatedBy(Integer createdBy) {
		this.createdBy = createdBy;
	}

	public Integer getModifyBy() {
		return modifyBy;
	}

	public void setModifyBy(Integer modifyBy) {
		this.modifyBy = modifyBy;
	}

	public Date getModifyOn() {
		return modifyOn;
	}

	public void setModifyOn(Date modifyOn) {
		this.modifyOn = modifyOn;
	}

	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((createdBy == null) ? 0 : createdBy.hashCode());
		result = prime * result + ((createdOn == null) ? 0 : createdOn.hashCode());
		result = prime * result + ((modifyBy == null) ? 0 : modifyBy.hashCode());
		result = prime * result + ((modifyOn == null) ? 0 : modifyOn.hashCode());
		result = prime * result + ((pmTeamTaskMap == null) ? 0 : pmTeamTaskMap.hashCode());
		result = prime * result + ((remark == null) ? 0 : remark.hashCode());
		result = prime * result + ((statusDate == null) ? 0 : statusDate.hashCode());
		result = prime * result + ((uploadByUser == null) ? 0 : uploadByUser.hashCode());
		result = prime * result + ((verifiedBy == null) ? 0 : verifiedBy.hashCode());
		result = prime * result + ((workImage == null) ? 0 : workImage.hashCode());
		result = prime * result + ((workStatus == null) ? 0 : workStatus.hashCode());
		result = prime * result + ((workStatusId == null) ? 0 : workStatusId.hashCode());
		return result;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj)
			return true;
		if (obj == null)
			return false;
		if (getClass() != obj.getClass())
			return false;
		WorkStatus other = (WorkStatus) obj;
		if (createdBy == null) {
			if (other.createdBy != null)
				return false;
		} else if (!createdBy.equals(other.createdBy))
			return false;
		if (createdOn == null) {
			if (other.createdOn != null)
				return false;
		} else if (!createdOn.equals(other.createdOn))
			return false;
		if (modifyBy == null) {
			if (other.modifyBy != null)
				return false;
		} else if (!modifyBy.equals(other.modifyBy))
			return false;
		if (modifyOn == null) {
			if (other.modifyOn != null)
				return false;
		} else if (!modifyOn.equals(other.modifyOn))
			return false;
		if (pmTeamTaskMap == null) {
			if (other.pmTeamTaskMap != null)
				return false;
		} else if (!pmTeamTaskMap.equals(other.pmTeamTaskMap))
			return false;
		if (remark == null) {
			if (other.remark != null)
				return false;
		} else if (!remark.equals(other.remark))
			return false;
		if (statusDate == null) {
			if (other.statusDate != null)
				return false;
		} else if (!statusDate.equals(other.statusDate))
			return false;
		if (uploadByUser == null) {
			if (other.uploadByUser != null)
				return false;
		} else if (!uploadByUser.equals(other.uploadByUser))
			return false;
		if (verifiedBy == null) {
			if (other.verifiedBy != null)
				return false;
		} else if (!verifiedBy.equals(other.verifiedBy))
			return false;
		if (workImage == null) {
			if (other.workImage != null)
				return false;
		} else if (!workImage.equals(other.workImage))
			return false;
		if (workStatus == null) {
			if (other.workStatus != null)
				return false;
		} else if (!workStatus.equals(other.workStatus))
			return false;
		if (workStatusId == null) {
			if (other.workStatusId != null)
				return false;
		} else if (!workStatusId.equals(other.workStatusId))
			return false;
		return true;
	}

}
