package com.sunjray.osdma.PCmodel;
// Generated Jul 29, 2019 8:46:52 PM by Hibernate Tools 4.3.5.Final

import static javax.persistence.GenerationType.IDENTITY;


import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.EnumType;
import javax.persistence.Enumerated;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;

import org.springframework.data.annotation.Transient;

import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import com.sunjray.osdma.PCenumeration.Status;

/**
 * PmTeamMember generated by hbm2java
 */
@Entity
@Table(name = "t_os_pm_team_member", catalog = "osdma")
public class PmTeamMember implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = 1L;

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "assignment_id", unique = true, nullable = false)
	private Long assignmentId;

	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "team_id")
	@JsonIgnoreProperties("pmTeamMembers")
	private MasterTeam masterTeam;

	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "employee_id")
	@JsonIgnoreProperties("pmTeamMembers")
	private EmployeePersonalDetails employeePersonalDetails;

	@Enumerated(EnumType.STRING)
	@Column(name = "status", length = 9)
	private Status status;
	
	
	@JsonSerialize
	@JsonDeserialize
	@Transient
	private EmployeePersonalDetails updateEmployeeDetails;
	
	

	public EmployeePersonalDetails getUpdateEmployeeDetails() {
		return updateEmployeeDetails;
	}

	public void setUpdateEmployeeDetails(EmployeePersonalDetails updateEmployeeDetails) {
		this.updateEmployeeDetails = updateEmployeeDetails;
	}

	public Long getAssignmentId() {
		return assignmentId;
	}

	public void setAssignmentId(Long assignmentId) {
		this.assignmentId = assignmentId;
	}

	public MasterTeam getMasterTeam() {
		return masterTeam;
	}

	public void setMasterTeam(MasterTeam masterTeam) {
		this.masterTeam = masterTeam;
	}

	public EmployeePersonalDetails getEmployeePersonalDetails() {
		return employeePersonalDetails;
	}

	public void setEmployeePersonalDetails(EmployeePersonalDetails employeePersonalDetails) {
		this.employeePersonalDetails = employeePersonalDetails;
	}

	public Status getStatus() {
		return status;
	}

	public void setStatus(Status status) {
		this.status = status;
	}

	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((assignmentId == null) ? 0 : assignmentId.hashCode());
		result = prime * result + ((employeePersonalDetails == null) ? 0 : employeePersonalDetails.hashCode());
		result = prime * result + ((masterTeam == null) ? 0 : masterTeam.hashCode());
		result = prime * result + ((status == null) ? 0 : status.hashCode());
		return result;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj)
			return true;
		if (obj == null)
			return false;
		if (getClass() != obj.getClass())
			return false;
		PmTeamMember other = (PmTeamMember) obj;
		if (assignmentId == null) {
			if (other.assignmentId != null)
				return false;
		} else if (!assignmentId.equals(other.assignmentId))
			return false;
		if (employeePersonalDetails == null) {
			if (other.employeePersonalDetails != null)
				return false;
		} else if (!employeePersonalDetails.equals(other.employeePersonalDetails))
			return false;
		if (masterTeam == null) {
			if (other.masterTeam != null)
				return false;
		} else if (!masterTeam.equals(other.masterTeam))
			return false;
		if (status != other.status)
			return false;
		return true;
	}

}
